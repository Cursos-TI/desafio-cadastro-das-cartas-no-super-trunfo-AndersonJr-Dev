#include <stdio.h>

// Estrutura para armazenar os dados de uma carta
typedef struct
{
    char estado[50];
    char codigo;
    char nome[50];
    int populacao;
    float area;
    float pib;
    int pontos_turisticos;
    float densidade_populacional;
    double pib_per_capita;
} Carta;

// Função para limpar o buffer de entrada
void limparBuffer()
{
    while (getchar() != '\n')
        ; // Limpa o buffer de entrada
}

// Função para cadastrar uma carta
void cadastrarCarta(Carta *c)
{
    printf("\n=== Cadastro de Carta ===\n");

    printf("Digite o nome do estado: ");
    scanf(" %s[^\n]", c->estado); // Leitura do nome do estado
    limparBuffer();               // Limpar buffer após ler o estado

    printf("Digite o código da carta: ");
    scanf("%c", &c->codigo); // Leitura do código
    limparBuffer();          // Limpar buffer após ler o código

    printf("Digite o nome da cidade: ");
    fgets(c->nome, sizeof(c->nome), stdin); // Leitura do nome da cidade
    limparBuffer();                         // Limpar buffer após ler o nome

    printf("Digite a população da cidade: ");
    scanf("%d", &c->populacao); // Leitura da população
    limparBuffer();             // Limpar buffer após ler a população

    printf("Digite a área da cidade em km²: ");
    scanf("%f", &c->area); // Leitura da área
    limparBuffer();        // Limpar buffer após ler a área

    printf("Digite o PIB da cidade em bilhões: ");
    scanf("%f", &c->pib); // Leitura do PIB
    limparBuffer();       // Limpar buffer após ler o PIB

    printf("Digite o número de pontos turísticos: ");
    scanf("%d", &c->pontos_turisticos); // Leitura do número de pontos turísticos
    limparBuffer();                     // Limpar buffer após ler os pontos turísticos
    printf("\nCarta cadastrada com sucesso!\n");

    // calcular a densidade populacional
    c->densidade_populacional = c->populacao / c->area;
    // calcular pib per capita
    c->pib_per_capita = c->pib / c->populacao;
}

// Função para exibir os dados de uma carta
void exibirCarta(const Carta *c)
{
    printf("\n=== Dados da Carta ===\n");
    printf("Estado: %s\n", c->estado); // `%s` já inclui o caractere '\n' da leitura anterior
    printf("Código: %c\n", c->codigo);
    printf("Cidade: %s\n", c->nome);
    printf("População: %d habitantes\n", c->populacao);
    printf("Área: %.2f km²\n", c->area);
    printf("PIB: %.2f bilhões\n", c->pib);
    printf("Pontos turísticos: %d\n", c->pontos_turisticos);
    printf("Densidade populacional: %.2f hab/km²\n", c->densidade_populacional);
    printf("PIB per capita: %lf pib/população\n", c->pib_per_capita);
}

int main()
{
    Carta carta1, carta2;

    // Cadastrando duas cartas
    cadastrarCarta(&carta1);
    cadastrarCarta(&carta2);

    // Exibindo as cartas cadastradas
    exibirCarta(&carta1);
    exibirCarta(&carta2);

    // menu interativo para escolher o atributo
    int atributo;
    printf("Escolha o atributo a ser comparado:\n");
    printf("1 - População\n");
    printf("2 - Área\n");
    printf("3 - PIB\n");
    printf("4 - Pontos turísticos\n");
    printf("5 - Densidade populacional\n");
    printf("6 - PIB per capita\n");
    scanf("%d", &atributo);

    // comparação dos atributos
    switch (atributo)
    {
    case 1:
        if (carta1.populacao > carta2.populacao)
            printf("A carta 1 venceu!\n");
        else if (carta1.populacao < carta2.populacao)
            printf("A carta 2 venceu!\n");
        else
            printf("Empate!\n");
        break;
    case 2:
        if (carta1.area > carta2.area)
            printf("A carta 1 venceu!\n");
        else if (carta1.area < carta2.area)
            printf("A carta 2 venceu!\n");
        else
            printf("Empate!\n");
        break;
    case 3:
        if (carta1.pib > carta2.pib)
            printf("A carta 1 venceu!\n");
        else if (carta1.pib < carta2.pib)
            printf("A carta 2 venceu!\n");
        else
            printf("Empate!\n");
        break;
    case 4:
        if (carta1.pontos_turisticos > carta2.pontos_turisticos)
            printf("A carta 1 venceu!\n");
        else if (carta1.pontos_turisticos < carta2.pontos_turisticos)
            printf("A carta 2 venceu!\n");
        else
            printf("Empate!\n");
        break;
    case 5:
        if (carta1.densidade_populacional > carta2.densidade_populacional)
            printf("A carta 1 venceu!\n");
        else if (carta1.densidade_populacional < carta2.densidade_populacional)
            printf("A carta 2 venceu!\n");
        else
            printf("Empate!\n");
        break;
    case 6:
        if (carta1.pib_per_capita > carta2.pib_per_capita)
            printf("A carta 1 venceu!\n");
        else if (carta1.pib_per_capita < carta2.pib_per_capita)
            printf("A carta 2 venceu!\n");
        else
            printf("Empate!\n");
        break;

    default:
        printf("Opção inválida!\n");
    }

    // retorna 0 para encerrar o programa
    return 0;
}
